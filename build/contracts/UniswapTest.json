{
  "contractName": "UniswapTest",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "giveMyAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getExchangeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[],\"name\":\"createPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getExchangeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"giveMyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/HelloWorld.sol\":\"UniswapTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/ERC20.sol\":{\"keccak256\":\"0x6d9d7bdffdd3478a84f0ef29adaffd350b61591301c0951f3444503f9e9fce29\",\"urls\":[\"bzz-raw://d45859205f84ca22bcd0246e61d7317a775e42505e6dbc9d84b2cc15aef4208b\",\"dweb:/ipfs/QmYymPrFpZGn6JxEmPHnwKQgpKfL3Hi6Vc6imck7yk492J\"]},\"/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/HelloWorld.sol\":{\"keccak256\":\"0xe401a75860f660c8e47e2d0269427dae866a9d704d255db46d7eda85af270394\",\"urls\":[\"bzz-raw://f1382d84e43ca5629912a6ee373df4ee8ef0d26d16646f927a1d313bbed2fef2\",\"dweb:/ipfs/QmQskAmp3wurwqc835dDhNZWbNp4YBT7nmGiJy9eVaK6Td\"]},\"/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/UniInterface.sol\":{\"keccak256\":\"0x3018f33926b857c18cc752f9420c8f538065fabca85d2108a103b53ddb054689\",\"urls\":[\"bzz-raw://613a2dd304f5114476c1847e0d91e8a28202799f2063ea1d93db9357fb66292d\",\"dweb:/ipfs/QmfQQQFJzCRSXcz2D4Tfr5vxPMMh8WMtMS6vgrZo8T7w3a\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506012610fa060405161002290610109565b8080602001806020018560ff168152602001848152602001838103835260048152602001807f5075747500000000000000000000000000000000000000000000000000000000815250602001838103825260028152602001807f5055000000000000000000000000000000000000000000000000000000000000815250602001945050505050604051809103906000f0801580156100c4573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610116565b6117048061067d83390190565b610558806101256000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063691dcad5146100675780639a06b113146100b15780639cd01605146100bb5780639d76ea5814610105578063a575ca9d1461014f578063fc0c546a14610199575b600080fd5b61006f6101e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b961020d565b005b6100c3610488565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010d6104ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101576104d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a16104fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000739c83dce8ca20e9aaf9d3efc003b2ea62abc0835190508073ffffffffffffffffffffffffffffffffffffffff16631648f38e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032957600080fd5b505af115801561033d573d6000803e3d6000fd5b505050506040513d602081101561035357600080fd5b81019080805190602001909291905050505060008173ffffffffffffffffffffffffffffffffffffffff166306f2bf62600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561040657600080fd5b505afa15801561041a573d6000803e3d6000fd5b505050506040513d602081101561043057600080fd5b8101908080519060200190929190505050905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158203ee222cc4ae9ca9ad5abe0ef559e47d334f5a237bc089fb3e40d958b3fc24d9a64736f6c6343000510003260806040523480156200001157600080fd5b506040516200170438038062001704833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360009080519060200190620001e49291906200052e565b508260019080519060200190620001fd9291906200052e565b5081600260006101000a81548160ff021916908360ff1602179055508060038190555060004690506040518080620016b2605291396052019050604051809103902060006040518082805460018160011615610100020316600290048015620002a05780601f106200027d576101008083540402835291820191620002a0565b820191906000526020600020905b8154815290600101906020018083116200028b575b505091505060405180910390206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050604051602081830303815290604052805190602001206006819055506200037233836200037d60201b60201c565b5050505050620005dd565b6200039981600354620004a560201b620010081790919060201c565b600381905550620003f881600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620004a560201b620010081790919060201c565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008082840190508381101562000524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200057157805160ff1916838001178555620005a2565b82800160010185558215620005a2579182015b82811115620005a157825182559160200191906001019062000584565b5b509050620005b19190620005b5565b5090565b620005da91905b80821115620005d6576000816000905550600101620005bc565b5090565b90565b6110c580620005ed6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b4114610371578063a9059cbb146103f4578063d505accf1461045a578063dd62ed3e146104f3576100cf565b80633644e515146102a357806370a08231146102c15780637ecebe0014610319576100cf565b806306fdde03146100d4578063095ea7b31461015757806318160ddd146101bd57806323b872dd146101db57806330adf81f14610261578063313ce5671461027f575b600080fd5b6100dc61056b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561011c578082015181840152602081019050610101565b50505050905090810190601f1680156101495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561016d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610609565b604051808215151515815260200191505060405180910390f35b6101c5610620565b6040518082815260200191505060405180910390f35b610247600480360360608110156101f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610626565b604051808215151515815260200191505060405180910390f35b6102696107f1565b6040518082815260200191505060405180910390f35b610287610818565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab61082b565b6040518082815260200191505060405180910390f35b610303600480360360208110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610831565b6040518082815260200191505060405180910390f35b61035b6004803603602081101561032f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610849565b6040518082815260200191505060405180910390f35b610379610861565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104406004803603604081101561040a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108ff565b604051808215151515815260200191505060405180910390f35b6104f1600480360360e081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050610916565b005b6105556004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c5a565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050505081565b6000610616338484610c7f565b6001905092915050565b60035481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146107db5761075a82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6a90919063ffffffff16565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6107e6848484610db4565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b600260009054906101000a900460ff1681565b60065481565b60046020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f75780601f106108cc576101008083540402835291602001916108f7565b820191906000526020600020905b8154815290600101906020018083116108da57829003601f168201915b505050505081565b600061090c338484610db4565b6001905092915050565b4284101561098c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f455850495245440000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b60006006547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600760008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001808781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040528051906020012060405160200180807f190100000000000000000000000000000000000000000000000000000000000081525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610b5e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610bd257508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610c44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f494e56414c49445f5349474e415455524500000000000000000000000000000081525060200191505060405180910390fd5b610c4f898989610c7f565b505050505050505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6000610dac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f48565b905092915050565b610e0681600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d6a90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e9b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100890919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610ff5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fba578082015181840152602081019050610f9f565b50505050905090810190601f168015610fe75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea265627a7a723158208645910e5c01464126d6d5527be7d0942f3c81fad9b958dfce6e0cea45e892b664736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063691dcad5146100675780639a06b113146100b15780639cd01605146100bb5780639d76ea5814610105578063a575ca9d1461014f578063fc0c546a14610199575b600080fd5b61006f6101e3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b961020d565b005b6100c3610488565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61010d6104ae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101576104d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a16104fe565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000739c83dce8ca20e9aaf9d3efc003b2ea62abc0835190508073ffffffffffffffffffffffffffffffffffffffff16631648f38e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032957600080fd5b505af115801561033d573d6000803e3d6000fd5b505050506040513d602081101561035357600080fd5b81019080805190602001909291905050505060008173ffffffffffffffffffffffffffffffffffffffff166306f2bf62600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561040657600080fd5b505afa15801561041a573d6000803e3d6000fd5b505050506040513d602081101561043057600080fd5b8101908080519060200190929190505050905080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158203ee222cc4ae9ca9ad5abe0ef559e47d334f5a237bc089fb3e40d958b3fc24d9a64736f6c63430005100032",
  "sourceMap": "147:1135:1:-;;;268:83;8:9:-1;5:2;;;30:1;27;20:12;5:2;268:83:1;332:2;335:4;310:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;310:30:1;302:5;;:38;;;;;;;;;;;;;;;;;;147:1135;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "147:1135:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;147:1135:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;624:340;;;:::i;:::-;;231:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;198:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;453:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;174:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1174:100;1224:7;1251:15;;;;;;;;;;;1244:22;;1174:100;:::o;624:340::-;686:5;;;;;;;;;;;663:12;;:29;;;;;;;;;;;;;;;;;;703:34;764:42;703:104;;818:10;:25;;;844:12;;;;;;;;;;;818:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;818:39:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;818:39:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;818:39:1;;;;;;;;;;;;;;;;;868:14;885:10;:22;;;908:12;;;;;;;;;;;885:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;885:36:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;885:36:1;;;;;;;;;;;;;;;;868:53;;950:6;932:15;;:24;;;;;;;;;;;;;;;;;;624:340;;:::o;231:30::-;;;;;;;;;;;;;:::o;198:27::-;;;;;;;;;;;;;:::o;453:90::-;498:7;523:12;;;;;;;;;;;516:19;;453:90;:::o;174:18::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.7.0;\n\nimport \"./UniInterface.sol\";\nimport \"./ERC20.sol\";\n\n//UniswapTest.deployed().then((instance)=>{app = instance;})\ncontract UniswapTest{\n\n    ERC20 public token;\n    address public tokenAddress;\n    address public exchangeAddress;\n\n    constructor() public{\n            token = new ERC20(\"Putu\",\"PU\",18,4000);\n        }\n\n    //function setTokenAddress() public{\n    //    tokenAddress = address(token);\n   // }\n    \n     function giveMyAddress() public view returns(address){\n        return tokenAddress;\n     }\n\n      //Creates a New UNISWAP Exchange for the Newly created ERC20 Token\n      function createPool() public{\n         tokenAddress = address(token);\n         UniswapFactoryInterface uniFactory = UniswapFactoryInterface(0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351);\n         uniFactory.createExchange(tokenAddress);\n         address result = uniFactory.getExchange(tokenAddress);\n         exchangeAddress = result;\n     } \n\n     //Returns the Address for the Uniswap Exchange created w.r.t the ERC20 token.\n     //If this function returns an address, it is verified that the New Exchange\n     //has been created successfully.\n     function getExchangeAddress() public view returns(address) {\n         return exchangeAddress;\n     }\n     \n}   \n    \n//UNISWAP FUNCTIONS\n    \n",
  "sourcePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/HelloWorld.sol",
  "ast": {
    "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/HelloWorld.sol",
    "exportedSymbols": {
      "UniswapTest": [
        482
      ]
    },
    "id": 483,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 410,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/UniInterface.sol",
        "file": "./UniInterface.sol",
        "id": 411,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 902,
        "src": "34:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 409,
        "src": "63:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          408
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 482,
        "linearizedBaseContracts": [
          482
        ],
        "name": "UniswapTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 414,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "174:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$408",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 413,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 408,
              "src": "174:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$408",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 416,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "198:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 415,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 418,
            "name": "exchangeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "231:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 417,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "288:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "302:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$408",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "50757475",
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "320:6:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d209b124ee5a9689d1dc82c91bf5734ff6eafeb11c23c7487f1861b603d4b31d",
                            "typeString": "literal_string \"Putu\""
                          },
                          "value": "Putu"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5055",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "327:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3c758da955009aef83f0597c84a2de6d6969c1a698e584378c2ad3a1060215ee",
                            "typeString": "literal_string \"PU\""
                          },
                          "value": "PU"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "332:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "34303030",
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "335:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4000_by_1",
                            "typeString": "int_const 4000"
                          },
                          "value": "4000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d209b124ee5a9689d1dc82c91bf5734ff6eafeb11c23c7487f1861b603d4b31d",
                            "typeString": "literal_string \"Putu\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3c758da955009aef83f0597c84a2de6d6969c1a698e584378c2ad3a1060215ee",
                            "typeString": "literal_string \"PU\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          {
                            "typeIdentifier": "t_rational_4000_by_1",
                            "typeString": "int_const 4000"
                          }
                        ],
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "310:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$returns$_t_contract$_ERC20_$408_$",
                          "typeString": "function (string memory,string memory,uint8,uint256) returns (contract ERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 422,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 408,
                          "src": "314:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "310:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$408",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "302:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$408",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "302:38:1"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:1"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:1"
            },
            "scope": 482,
            "src": "268:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "506:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 437,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 416,
                    "src": "523:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 436,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "516:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveMyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:1"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "498:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:9:1"
            },
            "scope": 482,
            "src": "453:90:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "652:312:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "663:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "686:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "678:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "678:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "663:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "663:29:1"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "name": "uniFactory",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "703:34:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                        "typeString": "contract UniswapFactoryInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 449,
                        "name": "UniswapFactoryInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 559,
                        "src": "703:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307839633833644345384341323045396141463944336566633030336232656136326142433038333531",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 451,
                      "name": "UniswapFactoryInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "740:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_UniswapFactoryInterface_$559_$",
                        "typeString": "type(contract UniswapFactoryInterface)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                      "typeString": "contract UniswapFactoryInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "703:104:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 458,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "844:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "uniFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "818:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createExchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 532,
                      "src": "818:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) external returns (address)"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "818:39:1"
                },
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "868:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "868:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "908:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "uniFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "885:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getExchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 539,
                      "src": "885:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "932:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "950:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "932:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "932:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:2:1"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:1"
            },
            "scope": 482,
            "src": "624:340:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "1233:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 478,
                    "name": "exchangeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 418,
                    "src": "1251:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 477,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "1244:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:2:1"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "1224:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1223:9:1"
            },
            "scope": 482,
            "src": "1174:100:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 483,
        "src": "147:1135:1"
      }
    ],
    "src": "0:1316:1"
  },
  "legacyAST": {
    "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/HelloWorld.sol",
    "exportedSymbols": {
      "UniswapTest": [
        482
      ]
    },
    "id": 483,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 410,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/UniInterface.sol",
        "file": "./UniInterface.sol",
        "id": 411,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 902,
        "src": "34:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/zaryab/blockchain_begins/all_about_ethereum/dapps/uniswapProjects/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 483,
        "sourceUnit": 409,
        "src": "63:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          408
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 482,
        "linearizedBaseContracts": [
          482
        ],
        "name": "UniswapTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 414,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "174:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$408",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 413,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 408,
              "src": "174:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$408",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 416,
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "198:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 415,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "198:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 418,
            "name": "exchangeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 482,
            "src": "231:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 417,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "288:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 421,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "302:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$408",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "50757475",
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "320:6:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d209b124ee5a9689d1dc82c91bf5734ff6eafeb11c23c7487f1861b603d4b31d",
                            "typeString": "literal_string \"Putu\""
                          },
                          "value": "Putu"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "5055",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "327:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3c758da955009aef83f0597c84a2de6d6969c1a698e584378c2ad3a1060215ee",
                            "typeString": "literal_string \"PU\""
                          },
                          "value": "PU"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "332:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "34303030",
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "335:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4000_by_1",
                            "typeString": "int_const 4000"
                          },
                          "value": "4000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d209b124ee5a9689d1dc82c91bf5734ff6eafeb11c23c7487f1861b603d4b31d",
                            "typeString": "literal_string \"Putu\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3c758da955009aef83f0597c84a2de6d6969c1a698e584378c2ad3a1060215ee",
                            "typeString": "literal_string \"PU\""
                          },
                          {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          {
                            "typeIdentifier": "t_rational_4000_by_1",
                            "typeString": "int_const 4000"
                          }
                        ],
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "310:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_uint256_$returns$_t_contract$_ERC20_$408_$",
                          "typeString": "function (string memory,string memory,uint8,uint256) returns (contract ERC20)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 422,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 408,
                          "src": "314:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "310:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$408",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "302:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$408",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "302:38:1"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:1"
            },
            "returnParameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:1"
            },
            "scope": 482,
            "src": "268:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "506:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 437,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 416,
                    "src": "523:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 436,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "516:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveMyAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:1"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "498:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "497:9:1"
            },
            "scope": 482,
            "src": "453:90:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "652:312:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 443,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "663:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "686:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$408",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "678:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "678:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "663:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "663:29:1"
                },
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "name": "uniFactory",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "703:34:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                        "typeString": "contract UniswapFactoryInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 449,
                        "name": "UniswapFactoryInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 559,
                        "src": "703:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307839633833644345384341323045396141463944336566633030336232656136326142433038333531",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 451,
                      "name": "UniswapFactoryInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "740:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_UniswapFactoryInterface_$559_$",
                        "typeString": "type(contract UniswapFactoryInterface)"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                      "typeString": "contract UniswapFactoryInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "703:104:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 458,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "844:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "uniFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "818:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createExchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 532,
                      "src": "818:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) external returns (address)"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "818:39:1"
                },
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "868:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "868:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 465,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "908:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "uniFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "885:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UniswapFactoryInterface_$559",
                          "typeString": "contract UniswapFactoryInterface"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getExchange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 539,
                      "src": "885:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "868:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 468,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "932:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "950:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "932:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "932:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:2:1"
            },
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:1"
            },
            "scope": 482,
            "src": "624:340:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "1233:41:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 478,
                    "name": "exchangeAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 418,
                    "src": "1251:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 477,
                  "id": 479,
                  "nodeType": "Return",
                  "src": "1244:22:1"
                }
              ]
            },
            "documentation": null,
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:2:1"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "1224:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1223:9:1"
            },
            "scope": 482,
            "src": "1174:100:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 483,
        "src": "147:1135:1"
      }
    ],
    "src": "0:1316:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x732E6188Fc058b09B7005F8950328B7dEc733802",
      "transactionHash": "0x3f62167d7e1533ad06c0ae0e4c7a4e3eb7912f8fb0e3a4ab8641d3d6fe765da9"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xCB23e61502E17FFBD1bA24a053e87D74fBe459Ff",
      "transactionHash": "0x830a68a21012d21067fee4f1628014dbfdec46ba77f3d147d76a09e9ab079337"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-06-20T16:43:25.091Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}