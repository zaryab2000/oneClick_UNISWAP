{
  "contractName": "IERC1820Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title ERC1820 Pseudo-introspection Registry Contract\n * @author Jordi Baylina and Jacques Dafflon\n * @notice For more details, see https://eips.ethereum.org/EIPS/eip-1820\n */\ninterface IERC1820Registry {\n    /**\n     * @notice Sets the contract which implements a specific interface for an address.\n     * Only the manager defined for that address can set it.\n     * (Each address is the manager for itself until it sets a new manager.)\n     * @param account Address for which to set the interface.\n     * (If 'account' is the zero address then 'msg.sender' is assumed.)\n     * @param interfaceHash Keccak256 hash of the name of the interface as a string.\n     * E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n     * @param implementer Contract address implementing `interfaceHash` for `account.address()`.\n     */\n    function setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer) external;\n\n    /**\n     * @notice Sets `newManager.address()` as manager for `account.address()`.\n     * The new manager will be able to call 'setInterfaceImplementer' for `account.address()`.\n     * @param account Address for which to set the new manager.\n     * @param newManager Address of the new manager for `addr.address()`.\n     * (Pass '0x0' to reset the manager to `account.address()`.)\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     *  @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     *  @param account Address of the contract for which to update the cache.\n     *  @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     *  @notice Get the manager of an address.\n     *  @param account Address for which to return the manager.\n     *  @return Address of the manager for a given address.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     *  @notice Query if an address implements an interface and through which contract.\n     *  @param account Address being queried for the implementer of an interface.\n     *  (If 'account' is the zero address then 'msg.sender' is assumed.)\n     *  @param interfaceHash Keccak256 hash of the name of the interface as a string.\n     *  E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n     *  @return The address of the contract which implements the interface `interfaceHash` for `account.address()`\n     *  or '0' if `account.address()` did not register an implementer for this interface.\n     */\n    function getInterfaceImplementer(address account, bytes32 interfaceHash) external view returns (address);\n\n    /**\n     *  @notice Checks whether a contract implements an ERC165 interface or not.\n     *  If the result is not cached a direct lookup on the contract address is performed.\n     *  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     *  'updateERC165Cache' with the contract address.\n     *  @param account Address of the contract to check.\n     *  @param interfaceId ERC165 interface to check.\n     *  @return True if `account.address()` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     *  @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     *  @param account Address of the contract to check.\n     *  @param interfaceId ERC165 interface to check.\n     *  @return True if `account.address()` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     *  @notice Compute the keccak256 hash of an interface given its name.\n     *  @param interfaceName Name of the interface.\n     *  @return The keccak256 hash of an interface name.\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     *  @notice Indicates a contract is the `implementer` of `interfaceHash` for `account`.\n     */\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    /**\n     *  @notice Indicates `newManager` is the address of the new manager for `account`.\n     */\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Registry.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        3837
      ]
    },
    "id": 3838,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC1820 Pseudo-introspection Registry Contract\n@author Jordi Baylina and Jacques Dafflon\n@notice For more details, see https://eips.ethereum.org/EIPS/eip-1820",
        "fullyImplemented": false,
        "id": 3837,
        "linearizedBaseContracts": [
          3837
        ],
        "name": "IERC1820Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Sets the contract which implements a specific interface for an address.\nOnly the manager defined for that address can set it.\n(Each address is the manager for itself until it sets a new manager.)\n@param account Address for which to set the interface.\n(If 'account' is the zero address then 'msg.sender' is assumed.)\n@param interfaceHash Keccak256 hash of the name of the interface as a string.\nE.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n@param implementer Contract address implementing `interfaceHash` for `account.address()`.",
            "id": 3767,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3760,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "935:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3762,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "952:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3761,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3764,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "975:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "934:61:34"
            },
            "returnParameters": {
              "id": 3766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:34"
            },
            "scope": 3837,
            "src": "902:103:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sets `newManager.address()` as manager for `account.address()`.\nThe new manager will be able to call 'setInterfaceImplementer' for `account.address()`.\n@param account Address for which to set the new manager.\n@param newManager Address of the new manager for `addr.address()`.\n(Pass '0x0' to reset the manager to `account.address()`.)",
            "id": 3774,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3769,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3774,
                  "src": "1424:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3771,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 3774,
                  "src": "1441:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1423:37:34"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:0:34"
            },
            "scope": 3837,
            "src": "1404:66:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache.",
            "id": 3781,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3776,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "1771:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3778,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "1788:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3777,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:37:34"
            },
            "returnParameters": {
              "id": 3780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:34"
            },
            "scope": 3837,
            "src": "1744:73:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Get the manager of an address.\n @param account Address for which to return the manager.\n @return Address of the manager for a given address.",
            "id": 3788,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3783,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "2030:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2029:17:34"
            },
            "returnParameters": {
              "id": 3787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "2070:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2069:9:34"
            },
            "scope": 3837,
            "src": "2010:69:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Query if an address implements an interface and through which contract.\n @param account Address being queried for the implementer of an interface.\n (If 'account' is the zero address then 'msg.sender' is assumed.)\n @param interfaceHash Keccak256 hash of the name of the interface as a string.\n E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n @return The address of the contract which implements the interface `interfaceHash` for `account.address()`\n or '0' if `account.address()` did not register an implementer for this interface.",
            "id": 3797,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3790,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2773:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3792,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2790:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2772:40:34"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2836:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2835:9:34"
            },
            "scope": 3837,
            "src": "2740:105:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n 'updateERC165Cache' with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account.address()` implements `interfaceId`, false otherwise.",
            "id": 3806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3799,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3444:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3801,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3461:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3800,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3443:37:34"
            },
            "returnParameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3804,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3504:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3503:6:34"
            },
            "scope": 3837,
            "src": "3409:101:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account.address()` implements `interfaceId`, false otherwise.",
            "id": 3815,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3890:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3810,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3907:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3889:37:34"
            },
            "returnParameters": {
              "id": 3814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3813,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3950:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3950:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3949:6:34"
            },
            "scope": 3837,
            "src": "3848:108:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Compute the keccak256 hash of an interface given its name.\n @param interfaceName Name of the interface.\n @return The keccak256 hash of an interface name.",
            "id": 3822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3817,
                  "name": "interfaceName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "4185:29:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4184:31:34"
            },
            "returnParameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3820,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "4239:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3819,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4238:9:34"
            },
            "scope": 3837,
            "src": "4162:86:34",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": " @notice Indicates a contract is the `implementer` of `interfaceHash` for `account`.",
            "id": 3830,
            "name": "InterfaceImplementerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4392:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3826,
                  "indexed": true,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4417:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3828,
                  "indexed": true,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4448:27:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4391:85:34"
            },
            "src": "4362:115:34"
          },
          {
            "anonymous": false,
            "documentation": " @notice Indicates `newManager` is the address of the new manager for `account`.",
            "id": 3836,
            "name": "ManagerChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3832,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4608:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3834,
                  "indexed": true,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4633:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4633:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4607:53:34"
            },
            "src": "4587:74:34"
          }
        ],
        "scope": 3838,
        "src": "208:4455:34"
      }
    ],
    "src": "0:4664:34"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        3837
      ]
    },
    "id": 3838,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3758,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title ERC1820 Pseudo-introspection Registry Contract\n@author Jordi Baylina and Jacques Dafflon\n@notice For more details, see https://eips.ethereum.org/EIPS/eip-1820",
        "fullyImplemented": false,
        "id": 3837,
        "linearizedBaseContracts": [
          3837
        ],
        "name": "IERC1820Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Sets the contract which implements a specific interface for an address.\nOnly the manager defined for that address can set it.\n(Each address is the manager for itself until it sets a new manager.)\n@param account Address for which to set the interface.\n(If 'account' is the zero address then 'msg.sender' is assumed.)\n@param interfaceHash Keccak256 hash of the name of the interface as a string.\nE.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n@param implementer Contract address implementing `interfaceHash` for `account.address()`.",
            "id": 3767,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3760,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "935:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3762,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "952:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3761,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3764,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3767,
                  "src": "975:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "934:61:34"
            },
            "returnParameters": {
              "id": 3766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:34"
            },
            "scope": 3837,
            "src": "902:103:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Sets `newManager.address()` as manager for `account.address()`.\nThe new manager will be able to call 'setInterfaceImplementer' for `account.address()`.\n@param account Address for which to set the new manager.\n@param newManager Address of the new manager for `addr.address()`.\n(Pass '0x0' to reset the manager to `account.address()`.)",
            "id": 3774,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3769,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3774,
                  "src": "1424:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3771,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 3774,
                  "src": "1441:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1441:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1423:37:34"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:0:34"
            },
            "scope": 3837,
            "src": "1404:66:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache.",
            "id": 3781,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3776,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "1771:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3778,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3781,
                  "src": "1788:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3777,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1770:37:34"
            },
            "returnParameters": {
              "id": 3780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:34"
            },
            "scope": 3837,
            "src": "1744:73:34",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Get the manager of an address.\n @param account Address for which to return the manager.\n @return Address of the manager for a given address.",
            "id": 3788,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3783,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "2030:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2029:17:34"
            },
            "returnParameters": {
              "id": 3787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3786,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3788,
                  "src": "2070:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2069:9:34"
            },
            "scope": 3837,
            "src": "2010:69:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Query if an address implements an interface and through which contract.\n @param account Address being queried for the implementer of an interface.\n (If 'account' is the zero address then 'msg.sender' is assumed.)\n @param interfaceHash Keccak256 hash of the name of the interface as a string.\n E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\n @return The address of the contract which implements the interface `interfaceHash` for `account.address()`\n or '0' if `account.address()` did not register an implementer for this interface.",
            "id": 3797,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3790,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2773:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2773:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3792,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2790:21:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3791,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2772:40:34"
            },
            "returnParameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3795,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3797,
                  "src": "2836:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2835:9:34"
            },
            "scope": 3837,
            "src": "2740:105:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n 'updateERC165Cache' with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account.address()` implements `interfaceId`, false otherwise.",
            "id": 3806,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3799,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3444:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3801,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3461:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3800,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3443:37:34"
            },
            "returnParameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3804,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "3504:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3504:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3503:6:34"
            },
            "scope": 3837,
            "src": "3409:101:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account.address()` implements `interfaceId`, false otherwise.",
            "id": 3815,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3890:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3890:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3810,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3907:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3907:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3889:37:34"
            },
            "returnParameters": {
              "id": 3814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3813,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3815,
                  "src": "3950:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3950:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3949:6:34"
            },
            "scope": 3837,
            "src": "3848:108:34",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Compute the keccak256 hash of an interface given its name.\n @param interfaceName Name of the interface.\n @return The keccak256 hash of an interface name.",
            "id": 3822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3817,
                  "name": "interfaceName",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "4185:29:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4184:31:34"
            },
            "returnParameters": {
              "id": 3821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3820,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "4239:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3819,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4238:9:34"
            },
            "scope": 3837,
            "src": "4162:86:34",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": " @notice Indicates a contract is the `implementer` of `interfaceHash` for `account`.",
            "id": 3830,
            "name": "InterfaceImplementerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4392:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4392:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3826,
                  "indexed": true,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4417:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3828,
                  "indexed": true,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "4448:27:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4391:85:34"
            },
            "src": "4362:115:34"
          },
          {
            "anonymous": false,
            "documentation": " @notice Indicates `newManager` is the address of the new manager for `account`.",
            "id": 3836,
            "name": "ManagerChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3832,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4608:23:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4608:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3834,
                  "indexed": true,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4633:26:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4633:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4607:53:34"
            },
            "src": "4587:74:34"
          }
        ],
        "scope": 3838,
        "src": "208:4455:34"
      }
    ],
    "src": "0:4664:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-05-16T19:09:56.659Z",
  "devdoc": {
    "author": "Jordi Baylina and Jacques Dafflon",
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "params": {
          "account": "Address being queried for the implementer of an interface. (If 'account' is the zero address then 'msg.sender' is assumed.)",
          "interfaceHash": "Keccak256 hash of the name of the interface as a string. E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface."
        },
        "return": "The address of the contract which implements the interface `interfaceHash` for `account.address()` or '0' if `account.address()` did not register an implementer for this interface."
      },
      "getManager(address)": {
        "params": {
          "account": "Address for which to return the manager."
        },
        "return": "Address of the manager for a given address."
      },
      "implementsERC165Interface(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "return": "True if `account.address()` implements `interfaceId`, false otherwise."
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "return": "True if `account.address()` implements `interfaceId`, false otherwise."
      },
      "interfaceHash(string)": {
        "params": {
          "interfaceName": "Name of the interface."
        },
        "return": "The keccak256 hash of an interface name."
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "params": {
          "account": "Address for which to set the interface. (If 'account' is the zero address then 'msg.sender' is assumed.)",
          "implementer": "Contract address implementing `interfaceHash` for `account.address()`.",
          "interfaceHash": "Keccak256 hash of the name of the interface as a string. E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface."
        }
      },
      "setManager(address,address)": {
        "params": {
          "account": "Address for which to set the new manager.",
          "newManager": "Address of the new manager for `addr.address()`. (Pass '0x0' to reset the manager to `account.address()`.)"
        }
      },
      "updateERC165Cache(address,bytes4)": {
        "params": {
          "account": "Address of the contract for which to update the cache.",
          "interfaceId": "ERC165 interface for which to update the cache."
        }
      }
    },
    "title": "ERC1820 Pseudo-introspection Registry Contract"
  },
  "userdoc": {
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "notice": "Query if an address implements an interface and through which contract."
      },
      "getManager(address)": {
        "notice": "Get the manager of an address."
      },
      "implementsERC165Interface(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling 'updateERC165Cache' with the contract address."
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
      },
      "interfaceHash(string)": {
        "notice": "Compute the keccak256 hash of an interface given its name."
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "notice": "Sets the contract which implements a specific interface for an address. Only the manager defined for that address can set it. (Each address is the manager for itself until it sets a new manager.)"
      },
      "setManager(address,address)": {
        "notice": "Sets `newManager.address()` as manager for `account.address()`. The new manager will be able to call 'setInterfaceImplementer' for `account.address()`."
      },
      "updateERC165Cache(address,bytes4)": {
        "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
      }
    },
    "notice": "For more details, see https://eips.ethereum.org/EIPS/eip-1820"
  }
}