{
  "contractName": "IERC1820Implementer",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title IERC1820Implementer\n * Interface for contracts that will be registered as implementers in the ERC1820 registry.\n * @notice For more details, see https://eips.ethereum.org/EIPS/eip-1820\n */\ninterface IERC1820Implementer {\n    /**\n     * @notice Indicates whether the contract implements the interface `interfaceHash` for the address `account` or\n     * not.\n     * @param interfaceHash keccak256 hash of the name of the interface\n     * @param account Address for which the contract will implement the interface\n     * @return ERC1820_ACCEPT_MAGIC only if the contract implements `interfaceHash` for the address `account`.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account) external view returns (bytes32);\n}\n",
  "sourcePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Implementer.sol",
  "ast": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Implementer.sol",
    "exportedSymbols": {
      "IERC1820Implementer": [
        3756
      ]
    },
    "id": 3757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3746,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title IERC1820Implementer\nInterface for contracts that will be registered as implementers in the ERC1820 registry.\n@notice For more details, see https://eips.ethereum.org/EIPS/eip-1820",
        "fullyImplemented": false,
        "id": 3756,
        "linearizedBaseContracts": [
          3756
        ],
        "name": "IERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Indicates whether the contract implements the interface `interfaceHash` for the address `account` or\nnot.\n@param interfaceHash keccak256 hash of the name of the interface\n@param account Address for which the contract will implement the interface\n@return ERC1820_ACCEPT_MAGIC only if the contract implements `interfaceHash` for the address `account`.",
            "id": 3755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3748,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "714:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "737:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "713:40:33"
            },
            "returnParameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "777:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3752,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:9:33"
            },
            "scope": 3756,
            "src": "673:113:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3757,
        "src": "228:560:33"
      }
    ],
    "src": "0:789:33"
  },
  "legacyAST": {
    "absolutePath": "/home/nventuro/dev/openzeppelin-solidity/contracts/introspection/IERC1820Implementer.sol",
    "exportedSymbols": {
      "IERC1820Implementer": [
        3756
      ]
    },
    "id": 3757,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3746,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title IERC1820Implementer\nInterface for contracts that will be registered as implementers in the ERC1820 registry.\n@notice For more details, see https://eips.ethereum.org/EIPS/eip-1820",
        "fullyImplemented": false,
        "id": 3756,
        "linearizedBaseContracts": [
          3756
        ],
        "name": "IERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Indicates whether the contract implements the interface `interfaceHash` for the address `account` or\nnot.\n@param interfaceHash keccak256 hash of the name of the interface\n@param account Address for which the contract will implement the interface\n@return ERC1820_ACCEPT_MAGIC only if the contract implements `interfaceHash` for the address `account`.",
            "id": 3755,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3748,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "714:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "737:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "713:40:33"
            },
            "returnParameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3753,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3755,
                  "src": "777:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3752,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:9:33"
            },
            "scope": 3756,
            "src": "673:113:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3757,
        "src": "228:560:33"
      }
    ],
    "src": "0:789:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-05-16T19:09:56.659Z",
  "devdoc": {
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "account": "Address for which the contract will implement the interface",
          "interfaceHash": "keccak256 hash of the name of the interface"
        },
        "return": "ERC1820_ACCEPT_MAGIC only if the contract implements `interfaceHash` for the address `account`."
      }
    },
    "title": "IERC1820Implementer Interface for contracts that will be registered as implementers in the ERC1820 registry."
  },
  "userdoc": {
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "Indicates whether the contract implements the interface `interfaceHash` for the address `account` or not."
      }
    },
    "notice": "For more details, see https://eips.ethereum.org/EIPS/eip-1820"
  }
}